@use "../constants.scss";

.mainForm {
	display: grid;
	grid-template-columns: 10rem auto;
	grid-auto-rows: 2rem;
	gap: 0.5rem 1rem;

	& > label {
		grid-column: 1/2;
	}

	& > p {
		margin: auto 0;
		grid-row: 4/5;
	}

	& > input {
		grid-column: 2/3;

		&[type="submit"] {
			grid-row: 4/5;
			justify-self: flex-end;
			width: 8rem;
		}
	}
}

.modeSwitcher {
	display: flex;
	flex-direction: rows;
	margin-bottom: 1rem;

	& > button {
		flex: 1;
		padding: 0.5rem 0;
		font-size: 1rem;
		font-family: "Roboto", sans-serif;
		cursor: pointer;
		border: none;
		border: 1px solid transparent;

		&.active {
			background-color: map-get(constants.$colors-background, "dark");
			box-shadow: inset constants.$presets-shadow;
			color: map-get(constants.$colors-foreground, "dark");
			text-shadow: constants.$presets-shadow;
		}

		&.inactive {
			background-color: map-get(constants.$colors-background, "base");
			border-top-color: map-get(constants.$colors-background, "dark");
			border-bottom-color: map-get(constants.$colors-background, "dark");
			color: map-get(constants.$colors-foreground, "base");

			&:first-child {
				border-left-color: map-get(constants.$colors-background, "dark");
			}

			&:last-child {
				border-right-color: map-get(constants.$colors-background, "dark");
			}

			&:hover {
				background-color: map-get(constants.$colors-background, "light");
			}
		}

		&:first-child {
			border-top-left-radius: constants.$dimens-border-radius;
			border-bottom-left-radius: constants.$dimens-border-radius;
		}

		&:last-child {
			border-top-right-radius: constants.$dimens-border-radius;
			border-bottom-right-radius: constants.$dimens-border-radius;
		}
	}
}

@media (max-width: constants.$dimens-mobile-treshold) {
	.mainForm {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;

		& > input[type="submit"] {
			align-self: flex-end;
		}
	}
}
